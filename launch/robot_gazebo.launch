<?xml version="1.0"?>
<launch>


  <!--Robot description and related parameter files -->
  <arg name="robot_description_file" default="$(find manipulacion_pkg)/urdf/robot.xacro"/>
  <arg name="joint_limit_params" default="$(find ur_description)/config/ur10/joint_limits.yaml"/>
  <arg name="kinematics_params" default="$(find ur_description)/config/ur10/default_kinematics.yaml"/>
  <arg name="physical_params" default="$(find ur_description)/config/ur10/physical_parameters.yaml"/>
  <arg name="visual_params" default="$(find ur_description)/config/ur10/visual_parameters.yaml"/>
  <arg name="activate_gravity" default="true"/>
  <arg name="floating_gripper" default="false"/>
  <arg name="tipo_gripper" default="default_gripper"/>
  <arg name="objeto" default="default_model"/>

  <!-- Launch gazebo empty world with robot description -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <!--arg name="world_name" value="$(find ur_gazebo)/worlds/empty.world"/-->
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <param name="robot_description"
  command="$(find xacro)/xacro '$(find manipulacion_pkg)/urdf/robot.xacro' 
          activate_gravity:=$(arg activate_gravity) 
          floating_gripper:=$(arg floating_gripper)
          tipo_gripper:=$(arg tipo_gripper)"/>
  <node name="ur10_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -param robot_description -model ur10"/>

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find manipulacion_pkg)/config/arm_controllers.yaml" command="load"/>
  <rosparam file="$(find manipulacion_pkg)/config/grippers/jaco_hand_controllers.yaml" command="load"/>
  <!-- load the controllers that come up when started-->
  <node name="robot_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
      output="screen" ns="/" args="joint_state_controller
      eff_joint_traj_controller "/>
  <node name="ur_robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen">
    <param name="publish_frequency" value="50.0" />
  </node>
  
    <!-- Load other controllers, but do not start them -->
  <node name="ros_control_stopped_spawner" pkg="controller_manager" type="spawner"
    args="--stopped joint_group_eff_controller" output="screen" respawn="false" />

  <include if="$(eval arg('tipo_gripper') == 'jaco')" file="$(find manipulacion_pkg)/launch/gripper/jaco_controllers.launch"/>
  <include if="$(eval arg('tipo_gripper') == 'robotiq')" file="$(find manipulacion_pkg)/launch/gripper/robotiq_controllers.launch"/>
  <include if="$(eval arg('tipo_gripper') == 'schunk')" file="$(find manipulacion_pkg)/launch/gripper/schunk_controllers.launch"/>

  <node name="object_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
  args="-sdf -file $(find manipulacion_pkg)/objects_models/$(arg objeto)/model.sdf -model $(arg objeto) -x 0.8 -y 0.4 -z 0.0 -R 0 -P 0 -Y 0"/>

  <node name="obstacle_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
  args="-sdf -file $(find manipulacion_pkg)/objects_models/other_red_obstacle/model.sdf -model other_red_obstacke -x 0.7 -y 0.0 -z 0.0 -R 0 -P 0 -Y 0"/>

  <node name="set_joints_initial_position" pkg="manipulacion_pkg" type="set_joints_initial_position.py" output="screen" />
</launch>